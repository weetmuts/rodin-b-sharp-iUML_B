/*
 * Copyright (c) 2007, 2010 Borland Software Corporation and others
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/GenModel'»


«DEFINE getExpressionBody FOR gmfgen::ValueExpression-»
«EXPAND getExpressionBody(self) FOR provider»
«ENDDEFINE»

«DEFINE getExpressionBody(gmfgen::ValueExpression valueExpr) FOR gmfgen::GenExpressionProviderBase»«ERROR 'Abstract template call: getExpression'»«ENDDEFINE»

«DEFINE getExpressionBody(gmfgen::ValueExpression valueExpr) FOR gmfgen::GenExpressionInterpreter-»
«getQualifiedClassName()».getExpressionBody(«expressions->indexOf(valueExpr) - 1»)«-»
«ENDDEFINE»


«DEFINE getExpression(gmfgen::ValueExpression valueExpr, genmodel::GenClassifier context) FOR gmfgen::GenExpressionProviderBase»«ERROR 'Abstract template call: getExpression'»«ENDDEFINE»

«DEFINE getExpression(gmfgen::ValueExpression valueExpr, genmodel::GenClassifier context) FOR gmfgen::GenExpressionInterpreter-»
«EXPAND getExpression(valueExpr, context, 'null')-»
«ENDDEFINE»

// occasionally we need to use some well-known context type, i.e. String
«DEFINE getExpression(gmfgen::ValueExpression valueExpr, String contextMetaClassifier) FOR gmfgen::GenExpressionInterpreter-»
«getQualifiedClassName()».«getExpressionAccessor(valueExpr)»(«expressions->indexOf(valueExpr) - 1», «contextMetaClassifier», 'null')«-»
«ENDDEFINE»

// pass specific environment to obtain expression 
«DEFINE getExpression(gmfgen::ValueExpression valueExpr, genmodel::GenClassifier context, String environmentArg) FOR gmfgen::GenExpressionInterpreter-»
«getQualifiedClassName()».«getExpressionAccessor(valueExpr)»(«expressions->indexOf(valueExpr) - 1», «EXPAND MetaModel::MetaClass FOR context», «environmentArg»)«-»
«ENDDEFINE»
