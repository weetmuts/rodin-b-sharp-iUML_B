/*
 * Copyright (c) 2006, 2010 Borland Software Corporation and others
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/gmf/2006/GraphicalDefinition'»

«DEFINE _constructor FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «editPartClassName»(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
«ENDDEFINE»

«DEFINE createDefaultEditPoliciesBody FOR gmfgen::GenLink-»
	super.createDefaultEditPolicies();
	«IF null = modelFacet-»
		installEditPolicy(org.eclipse.gef.EditPolicy.COMPONENT_ROLE, new org.eclipse.gmf.runtime.diagram.ui.editpolicies.ViewComponentEditPolicy());
	«ENDIF-»
	«EXPAND xpt::diagram::editparts::Common::installSemanticEditPolicy-»
	«EXPAND installGraphicalNodeEditPolicy-»
	«EXPAND xpt::diagram::editparts::Common::behaviour FOR self-»
	«EXPAND additionalEditPolicies-»
«ENDDEFINE»

«DEFINE installGraphicalNodeEditPolicy FOR gmfgen::GenLink-»
«ENDDEFINE»

«DEFINE additionalEditPolicies FOR gmfgen::GenLink»«ENDDEFINE»

«DEFINE addFixedChild FOR gmfgen::GenLink-»
«IF labels->notEmpty() and (labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ParentAssignedViewmap)) 
	or labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ModeledViewmap))) -»
	«EXPAND xpt::Common::generatedMemberComment»
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		«FOREACH labels AS label-»
			«EXPAND addLabel(label) FOR label.viewmap-»
		«ENDFOREACH-»
		return false;
	}
«ENDIF»
«ENDDEFINE»

// Note, condition in addFixedChild template above should be changed if addLabel support added for Viewmaps other than ParentAssignedViewmap
«DEFINE addLabel(label : gmfgen::GenLinkLabel) FOR gmfgen::Viewmap»«ENDDEFINE»
«DEFINE addLabel(label : gmfgen::GenLinkLabel) FOR gmfgen::ParentAssignedViewmap-»
	«EXPAND addLabelCommonCode(getterName, label)-»
«ENDDEFINE»

«DEFINE addLabel(label : gmfgen::GenLinkLabel) FOR gmfgen::ModeledViewmap-»
	«LET figureModel.oclAsType(gmfgraph::DiagramLabel).accessor AS labelAccessor-»
		«IF not labelAccessor.oclIsUndefined() and not labelAccessor.accessor.oclIsUndefined()-»
			«EXPAND addLabelCommonCode(labelAccessor.accessor, label)-»
		«ENDIF-»
	«ENDLET-»
«ENDDEFINE»

«DEFINE addLabelCommonCode(getterName : String, label : gmfgen::GenLinkLabel) FOR gmfgen::Viewmap-»
 	if (childEditPart instanceof «label.getEditPartQualifiedClassName()») {
 		((«label.getEditPartQualifiedClassName()») childEditPart).«EXPAND impl::diagram::editparts::TextAware::labelSetterName»(
 				getPrimaryShape().«getterName»());
 				return true;
 	}
«ENDDEFINE»

«DEFINE removeFixedChild FOR gmfgen::GenLink-»
«IF labels->notEmpty() and (labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ParentAssignedViewmap)) 
	or labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ModeledViewmap))) -»
	«EXPAND xpt::Common::generatedMemberComment»
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		«FOREACH labels AS label-»
			«EXPAND removeLabel(label) FOR label.viewmap-»
		«ENDFOREACH-»
		return false;
	}
«ENDIF»
«ENDDEFINE»

// Note, condition in removeFixedChild template above should be changed if removeLabel support added for Viewmaps other than ParentAssignedViewmap
«DEFINE removeLabel(label : gmfgen::GenLinkLabel) FOR gmfgen::Viewmap»«ENDDEFINE»
«DEFINE removeLabel(label : gmfgen::GenLinkLabel) FOR gmfgen::ParentAssignedViewmap-»
	«EXPAND removeLabelCommonCode FOR label-»
«ENDDEFINE»

«DEFINE removeLabel(label : gmfgen::GenLinkLabel) FOR gmfgen::ModeledViewmap-»
	«EXPAND removeLabelCommonCode FOR label-»
«ENDDEFINE»

«DEFINE removeLabelCommonCode FOR gmfgen::GenLinkLabel-»
	if (childEditPart instanceof «getEditPartQualifiedClassName()») {
 		return true;
 	}
«ENDDEFINE»

«DEFINE addChildVisual FOR gmfgen::GenLink-»
«IF labels->notEmpty() and (labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ParentAssignedViewmap))
	or labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ModeledViewmap)))-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, index);
	}
«ENDIF»
«ENDDEFINE»

«DEFINE removeChildVisual FOR gmfgen::GenLink-»
«IF labels->notEmpty() and (labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ParentAssignedViewmap))
	or labels->exists(l | l.viewmap.oclIsKindOf(gmfgen::ModeledViewmap)))-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)) {
			return;
		}
		super.removeChildVisual(childEditPart);
	}
«ENDIF»
«ENDDEFINE»

«DEFINE createLinkFigure FOR gmfgen::GenLink-»
	«EXPAND xpt::Common::generatedMemberComment(
		'Creates figure for this edit part.\n' + 
		'\n' + 
		'Body of this method does not depend on settings in generation model\n' + 
		'so you may safely remove <i>generated</i> tag and modify it.\n'
	)»
	«EXPAND createLinkFigure(self) FOR viewmap-»
«ENDDEFINE»

«DEFINE createLinkFigure(link : gmfgen::GenLink) FOR gmfgen::Viewmap-»
	«ERROR 'Unknown viewmap: ' + self.repr()-»
«ENDDEFINE»

«DEFINE createLinkFigure(link : gmfgen::GenLink) FOR gmfgen::ModeledViewmap-»
		protected org.eclipse.draw2d.Connection createConnectionFigure() {
			return new «EXPAND _modeledViewmapFigureFQN»();
		}
		
		«EXPAND xpt::Common::generatedMemberComment»
		public «EXPAND _modeledViewmapFigureFQN» getPrimaryShape() {
			return («EXPAND _modeledViewmapFigureFQN») getFigure();
		}
		
		«EXPAND impl::diagram::editparts::viewmaps::modeledViewmapProducer::viewmapClassBody-»
«ENDDEFINE»

«DEFINE _modeledViewmapFigureFQN FOR gmfgen::ModeledViewmap-»
«EXPAND impl::diagram::editparts::viewmaps::modeledViewmapProducer::viewmapFigureFQN FOR self-»
«ENDDEFINE»

«DEFINE createLinkFigure(link : gmfgen::GenLink) FOR gmfgen::FigureViewmap-»
	«LET (if figureQualifiedClassName = null then 'org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx' else figureQualifiedClassName endif) AS fqn-»
		protected org.eclipse.draw2d.Connection createConnectionFigure() {
			return new «fqn»();
		}

		«EXPAND xpt::Common::generatedMemberComment»
		public «fqn» getPrimaryShape() {
			return («fqn») getFigure();
		}
	«ENDLET-»
«ENDDEFINE»

«DEFINE createLinkFigure(link : gmfgen::GenLink) FOR gmfgen::SnippetViewmap»
	protected org.eclipse.draw2d.Connection createConnectionFigure() {
		return «body»;
	}
«ENDDEFINE»

«DEFINE createLinkFigure(link : gmfgen::GenLink) FOR gmfgen::InnerClassViewmap»
	protected org.eclipse.draw2d.Connection createConnectionFigure() {
		return new «className»();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public «className» getPrimaryShape() {
		return («className») getFigure();
	}

	«classBody»
«ENDDEFINE»

«REM»CFS: added refresh foreground colour body for link editparts«ENDREM»
«DEFINE refreshForegroundColorBody FOR gmfgen::GenLink-»
    org.eclipse.swt.graphics.RGB rgb = null;
	// set foreground line color
	org.eclipse.emf.ecore.EObject element = resolveSemanticElement();
	if (element != null) {
		org.eclipse.emf.ecore.EClass eClazz = element.eClass();
		rgb = org.eclipse.jface.preference.PreferenceConverter.getColor(
				prefStore,
				ac.soton.eventb.statemachines.diagram.preferences.SpecificDiagramAppearancePreferencePage.getLineColorPreference(eClazz, false));
	}
	
	if (rgb!=null){
		setForegroundColor(new Color(null,rgb));
	}else{
		super.refreshForegroundColor();
	}
«ENDDEFINE»

«REM»CFS: added set line width body for link editparts«ENDREM»
«DEFINE setLineWidthBody FOR gmfgen::GenLink-»
	getPrimaryShape().setLineWidth(width);
«ENDDEFINE»

«REM»MY: added notification handler body for link editparts«ENDREM»
«DEFINE handleNotificationEventBody FOR gmfgen::GenLink-»
	«EXPAND handleStateChange»
	super.handleNotificationEvent(event);
«ENDDEFINE»

«REM»MY: code to update line width if state of enabled operations changes (currently added to all links)«ENDREM»
«DEFINE handleStateChange FOR gmfgen::GenLink-»
	java.lang.String featureName = event.getFeature() instanceof org.eclipse.emf.ecore.EStructuralFeature? ((org.eclipse.emf.ecore.EStructuralFeature)event.getFeature()).getName() : "";		
	// update line width and color if state of enabled operations changes
	if ("operations".equals(featureName)) {
		boolean active = event.getNewValue()==null ? false : !((java.util.Collection<?>)event.getNewValue()).isEmpty();
		setLineWidth(1 + (active ? 2 : 0));
	}
«ENDDEFINE»